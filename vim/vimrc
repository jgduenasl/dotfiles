" Maintainer: JG
" Date: June 4 
" License: GPL-2 or newer
" --------------------------------------------------
" dotfiles/vim/vimrc

if $OS == 'macos'
    set runtimepath+=~/.vim_runtime

    source ~/.vim_runtime/vimrcs/basic.vim
    source ~/.vim_runtime/vimrcs/filetypes.vim
    source ~/.vim_runtime/vimrcs/plugins_config.vim
    source ~/.vim_runtime/vimrcs/extended.vim

    try
        source ~/.vim_runtime/my_configs.vim
    catch
    endtry
endif

"=========================================================
"=========================================================
"basic options{{{
set cursorline cterm=NONE ctermbg=darkred ctermfg=black guibg=darkred guifg=black
set termguicolors
syntax enable                                                " sets up syntax highlighting
set background=dark
"colorscheme solarized
set clipboard=unnamed                                        " yank and paste with the system clipboard
set laststatus=2                                             " always show statusline
set spelllang=en                                             " English spellcheck
set spell
set ruler                                                    " show where you are
set scrolloff=3                                              " show context above/below cursorline
set showcmd

"tabs
set tabstop=4                                                " sets tabs to 4 spaces
set softtabstop=2                                            " insert mode tab and backspace use 2 spaces
set expandtab 
set shiftwidth=4 smarttab                                    " normal mode indentation commands use 2 spaces
set smartindent

"search options
set incsearch                                                " search as you type
set smartcase                                                " case-sensitive search if any caps
set ignorecase                                               " case-insensitive search

"completion options
set wildignore=log/**,node_modules/**,target/**,tmp/**,*.rbc
set wildmenu                                                 " show a navigable menu for tab completion
set wildmode=longest,list,full

" sets noexpandtab for Makefiles
if &ft == 'make'
    setlocal noexpandtab
    setlocal tabstop=4
endif
"}}}

"layout{{{
set relativenumber number                                    " sets line numbers
highlight LineNr ctermfg=grey
set colorcolumn=80                                           " color columns beyond 80 characters
highlight ColorColumn ctermbg=red guibg=red
set list                                                     " show trailing whitespace
set listchars=tab:▸\ ,eol:¬,nbsp:·,trail:·                   " remove trailing space

" sets parenthetical highlighting to just bold
hi MatchParen cterm=bold ctermbg=Black ctermfg=none          
"}}}


"=========================================================
"=========================================================
" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" screen and window management
"Plug 'mhinz/vim-startify'             " cute!
"Plug 'qpkorr/vim-bufkill'             " :BD is very useful


Plug 'itchyny/lightlne'                " color mode
Plug 'ap/vim-buftabline'               " buffers as tabs

"editing and formatting
"Plug 'tpope/vim-surround'             " adds surround action to create cmts
Plug 'tpope/vim-sensible'
"Plug 'tpope/vim-unimpaired'           " many additional movements with [ and ]
"Plug 'tomtom/tcomment_vim'
Plug 'ntpeters/vim-better-whitespace' " to remove trailing whitespace on save
"Plug 'machakann/vim-highlightedyank'  " blink
"Plug 'haya14busa/incsearch.vim'

" completion
Plug 'lifepillar/vim-mucomplete'

" navigation
Plug 'justinmk/vim-sneak'             "Powerful and minimal motion plugin
Plug 'SirVer/ultisnips'               " Track the engine.
" Snippets are separated from the engine. Add this if you want them:
Plug 'honza/vim-snippets'

"" files, buffers, and tags
Plug 'ap/vim-buftabline'         " adds buffer tabs and numbers
Plug 'dhruvasagar/vim-vinegar'   " - for curdir and adds some netrw behaviors

" colors and UI
Plug 'airblade/vim-gitgutter'          " put chars in gutter
Plug 'kshenoy/vim-signature'           " less cluttered, marks more visible
Plug 'itchyny/lightline.vim'           " workable. Prob could be done by hand.
Plug 'luochen1990/rainbow'             "showing different levels of parentheses in different colors
"Plug 'itchyny/vim-cursorword'          " this works w * operator
"Plug 'mhartington/oceanic-next'
Plug 'junegunn/seoul256.vim'          "low-contrast Vim color scheme based on Seoul Colors
"https://github.com/altercation/vim-colors-solarized

" languages
Plug 'sheerun/vim-polyglot'
Plug 'lervag/vimtex'
"Plug 'raimon49/requirements.txt.vim', {'for': 'requirements'}
Plug 'reedes/vim-pencil'
Plug 'vim-scripts/dbext.vim'

" markdown stuff
Plug 'vim-pandoc/vim-pandoc'
Plug 'vim-pandoc/vim-pandoc-syntax'
Plug 'vim-pandoc/vim-rmarkdown'

Plug 'dense-analysis/ale'             "providing linting (syntax checking and semantic errors)
Plug 'vim-airline/vim-airline'        "Lean & mean status/tabline for vim that's light as air
Plug 'vim-airline/vim-airline-themes'
Plug 'ncm2/ncm2'                      "slim, fast and hackable completion framework
Plug 'ncm2/ncm2-bufword'
Plug 'ncm2/ncm2-path'
Plug 'ncm2/ncm2-github'
Plug 'ncm2/ncm2-syntax'
Plug 'ncm2/ncm2-jedi'
Plug 'ncm2/ncm2-vim'
Plug 'ervandew/supertab'
Plug 'godlygeek/tabular'

Plug 'jalvesaq/Nvim-R', {'branch':'stable'} "Vim's support to edit R code
"Plug 'jalvesaq/vimcmdline'            "Send code to command line interpreter



" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"

"List ends here. Plugins become visible to Vim after this call.
call plug#end()

"==================================================================
"=================================================================
" mappings
"" the big picture here is:
"" * remapping std vim keys should be enhancements, not overrides
"" * leader keys are in groups
"" * try to stay off remapping C- keys. There's already lots there.
"" * A-x keys move among windows and do not-vimmy stuff
" Vim inline comments don't work with mappings

"defining global leader key
let g:mapleader='\'

"go up and down prompt
nnoremap <space> <C-d>
"revisar
nnoremap <C-space> <C-u>

""hightligth on and off
nnoremap <leader>c :set cursorline!<CR>
"" tweaks adding functionality to existing keys
nnoremap D Da
" Keep the cursor in place while joining lines
nnoremap J mzJ`z
"split a line in two, inverse of J
nnoremap <C-J> a<CR><Esc>k$

"" direct editing
nnoremap <leader>evim :e ~/github/dotfiles/vim/vimrc<cr>
nnoremap <leader>ebash :e ~/github/dotfiles/bash/bash_profile<cr>
nnoremap <leader>etut :e ~/github/tutorials/Readme.md<cr>

"save on escape
"inoremap <Esc> <Esc>:w<CR>

"" buffer navigation 
nnoremap <leader>1 :b1<CR>
nnoremap <leader>2 :b2<CR>
nnoremap <leader>3 :b3<CR>
nnoremap <leader>4 :b4<CR>
nnoremap <leader>5 :b5<CR>
nnoremap <leader>6 :b6<CR>
nnoremap <leader>7 :b7<CR>
nnoremap <leader>8 :b8<CR>
nnoremap <leader>9 :b9<CR>
nnoremap <leader>0 :b10<CR>

